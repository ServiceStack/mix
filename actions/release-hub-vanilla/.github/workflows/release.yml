name: Release
on:
  release:
    types: [published]
jobs:
  push_to_registry:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: repository name fix
        run: |
          echo "app_name=$(echo ${{ secrets.DOCKERHUB_REPO }} | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.2.2
        with:
          file: Dockerfile
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_REPO }}:${{ github.event.release.tag_name }}
  
  deploy_via_ssh:
    needs: push_to_registry
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: repository name fix and env
        run: |
          echo "app_name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' | tr -d . | cut -d'/' -f2)" >> $GITHUB_ENV
          echo "image_repo=${{ secrets.DOCKERHUB_REPO }}" >> $GITHUB_ENV
          echo "domain=${{ secrets.DEPLOY_HOST }}" >> $GITHUB_ENV
          echo "letsencrypt_email=${{ secrets.LETSENCRYPT_EMAIL }}" >> $GITHUB_ENV

      - name: docker-compose file prep
        uses: danielr1996/envsubst-action@1.0.0
        env:
          RELEASE_VERSION: ${{ github.event.release.tag_name }}
          IMAGE_REPO: ${{ env.image_repo }}
          HOST_DOMAIN: ${{ env.domain }}
          LETSENCRYPT_EMAIL: ${{ env.letsencrypt_email }}
        with:
          input: deploy/docker-compose-template.yml
          output: deploy/MyApp-docker-compose.yml

      - name: copy compose file via scp
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          port: ${{ secrets.DEPLOY_PORT }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "deploy/MyApp-docker-compose.yml"
          target: "~/"

      - name: Set the value
        run: |
          echo "DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}" >> $GITHUB_ENV
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          echo "DEPLOY_USERNAME=${{ secrets.DEPLOY_USERNAME }}" >> $GITHUB_ENV

      - name: remote docker-compose up via ssh
        uses: appleboy/ssh-action@v0.1.4
        env:
          APPTOKEN: ${{ env.DOCKERHUB_TOKEN }}
          HUB_USERNAME: ${{ env.DOCKERHUB_USERNAME }}
          USERNAME: ${{ env.DEPLOY_USERNAME }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          envs: APPTOKEN,USERNAME,HUB_USERNAME
          script: |
            echo $APPTOKEN | docker login --username $HUB_USERNAME --password-stdin
            docker-compose -f ~/deploy/MyApp-docker-compose.yml up -d
